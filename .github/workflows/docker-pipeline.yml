name: my github pipeline

on:
  push:
    branches:
      - main  # or the branch you want to trigger the workflow on

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: 'mutuwa12'
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      imagename: 'devsecops_github'
      registry: 'docker.io'
      imageTag: 'latest'
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      REMOTE_USER: 'ubuntu'
      SERVER_IP: '54.226.107.81'
      CONTAINER_NAME: 'devsecops'

    steps:
      - name: Checkout Code Mutuwa code
        uses: actions/checkout@v2

      - name: Build Noble Django Docker Image
        run: |
          echo "DOCKERHUB_USERNAME: $DOCKER_USERNAME"
          echo "DOCKERHUB_PASSWORD: ***"
          echo "imagename: $imagename"
          echo "registry: $registry"
          echo "imageTag: $imageTag"
          echo "SSH_PRIVATE_KEY: ***"
          echo "REMOTE_USER: $REMOTE_USER"
          echo "SERVER_IP: $SERVER_IP"
          echo "CONTAINER_NAME: $CONTAINER_NAME"
          docker build -t ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag} .

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: '${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag}'  # Updated image reference
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     format: 'template'
      #     template: '@/contrib/sarif.tpl'
      #     output: 'trivy-results.sarif'
      #     severity: 'CRITICAL,HIGH'

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
          docker push ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag}

  # codeql_analysis:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Run CodeQL Analysis
  #       run: |
  #         docker run --rm \
  #           -e CODEQL_ACTION_TOKEN \
  #           -v "$(pwd):/usr/src" \
  #           -w /usr/src \
  #           ghcr.io/github/codeql-action/codeql-bundle:latest \
  #           analyze --sarif-format \
  #           --output=sarif-codeql.sarif \
  #           --repository-root=$(pwd) \
  #           /usr/src

  #     - name: Upload CodeQL scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: 'sarif-codeql.sarif' 

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop ${CONTAINER_NAME} || true
            docker rm ${CONTAINER_NAME} || true
            docker pull ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag}
            docker run -d --name ${CONTAINER_NAME} -p 8000:8000 ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag}

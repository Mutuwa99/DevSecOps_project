name: my github pipeline

on:
  push:
    branches:
      - main  # or the branch you want to trigger the workflow on

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      imagename: 'devsecops_github'
      registry: 'docker.io'
      imageTag: 'latest'
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      REMOTE_USER: 'ubuntu'
      SERVER_IP: '54.226.107.81'
      CONTAINER_NAME: 'devsecops'

    steps:
      - name: Checkout Code Mutuwa code
        uses: actions/checkout@v2

      - name: Build Noble Django Docker Image
        run: |
          echo "DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME"
          echo "DOCKERHUB_PASSWORD: ***"
          echo "imagename: $imagename"
          echo "registry: $registry"
          echo "imageTag: $imageTag"
          echo "SSH_PRIVATE_KEY: ***"
          echo "REMOTE_USER: $REMOTE_USER"
          echo "SERVER_IP: $SERVER_IP"
          echo "CONTAINER_NAME: $CONTAINER_NAME"
          docker build -t ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag} .

      # - name: OWASP Dependency-Check Scan
      #   run: |
      #     docker run --rm \
      #       -v $(pwd):/src \
      #       owasp/dependency-check:latest \
      #       --scan /src \
      #       --format "HTML" \
      #       --project "My Project"



      - name: Trivy Scan
        run: |
          docker run --rm -v $(pwd):/app -w /app aquasec/trivy ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag} --format=json > trivy-results.json


      - name: Push Docker Image to Docker Hub
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
          docker push ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag}

  bandit_scan:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Bandit
        run: |
          python -m pip install bandit

      - name: Run Bandit Security Scan
        run: |
          bandit -r . -f json -o bandit_results.json
          cat bandit_results.json  # Display Bandit results in the workflow log
          # Parse Bandit JSON report and create GitHub Actions annotations
          echo "::set-output name=bandit_results::$(cat bandit_results.json)"

  deploy:
    needs: bandit_scan
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop ${CONTAINER_NAME} || true
            docker rm ${CONTAINER_NAME} || true
            docker pull ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag}
            docker run -d --name ${CONTAINER_NAME} -p 8000:8000 ${registry}/${DOCKERHUB_USERNAME}/${imagename}:${imageTag}

  trivy_report:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Display Trivy Scan Results
        run: |
          cat trivy-results.json

  owasp_report:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Display OWASP Dependency-Check Results
        run: |
          cat dependency-check-report.html